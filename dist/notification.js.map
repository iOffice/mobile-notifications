{"version":3,"file":"dist/notification.js","sources":["dist/notification.js","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/3"],"names":[],"mappings":"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","sourcesContent":["((window, document, undefined) => {\n  // Underscore implementation of _.defaults\n  // https://github.com/jashkenas/underscore/blob/master/underscore.js#L863\n  var mergeDefaults = function(obj) {\n    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] === void 0 ) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  var defaults = {\n    /**\n     * Duration to show the notification\n     */\n    duration: 2500,\n    /**\n     * Class to add to the generated markup\n     */\n    class: 'notification',\n    /**\n     * Parent element to attach notification to\n     * @returns {*|HTMLElement}\n     */\n    parent: function () {\n      return document.querySelector('[data-notification-container]');\n    },\n    /**\n     * Type of notification\n     * This is the class name that is attached to the element upon creation\n     * Intended to be used to control visual clues as to what type of notification\n     * is shown.\n     */\n    type: 'success',\n    /**\n     * If true notification can be hidden on tap/click\n     */\n    tapToClose: false,\n    /**\n     * If true notification is shown immediatley\n     */\n    show: true,\n    /**\n     * Duration to delay the destruction of the DOM element created for the notification\n     * If you animation is longer than the default increase this time accordingly\n     */\n    destroyAfter: 500\n  };\n\n  /**\n   * Simple notification alert meant to be used with PhoneGap apps\n   * @param text Text content of the notification\n   * @param options Notification Options\n   * @constructor\n   */\n\n  class NotificationClass {\n    constructor(text, options) {\n      this.options = mergeDefaults(options || {}, defaults);\n\n      this.updateDOM(text);\n\n      this._setupEvents();\n\n      if (this.options.show) {\n        // For iOS we need to wait for the current stack to clear\n        // or the initial animation will not run\n        setTimeout(this.show, 1);\n      }\n    }\n\n    updateDOM(text) {\n      var textNode = document.createTextNode((text && typeof text !== 'object') ? text : '');\n      var el = this.el = document.createElement('div');\n      var parent = this.parent = typeof this.options.parent === 'function' ? this.options.parent() : this.options.parent;\n\n      el.appendChild(textNode);\n      el.classList.add(this.options.class, this.options.type);\n      parent.appendChild(this.el);\n    }\n\n    /**\n     * Show the notification manually\n     * @returns {Notification}\n     */\n    show() {\n      this.el.classList.add('show');\n\n      if (!this.options.tapToClose) setTimeout(this.hide, this.options.duration);\n\n      return this;\n    }\n\n    /**\n     * Hide the notification manually\n     * @returns {Notification}\n     */\n    hide() {\n      this.el.classList.remove('show');\n\n      setTimeout(this.destroy, this.options.destroyAfter);\n\n      return this;\n    }\n\n    /**\n     * Destroy and remove all attached events manually\n     */\n    destroy() {\n      this._destroyEvents();\n\n      this.parent.removeChild(this.el);\n    }\n\n    /**\n     * Setup and attach events to the notification\n     * @returns {Notification}\n     * @private\n     */\n    _setupEvents() {\n      if (this.options.tapToClose) this.el.addEventListener('touchstart', this.hide);\n\n      return this;\n    }\n\n    /**\n     * Remove attached events from the notification\n     * @returns {Notification}\n     * @private\n     */\n    _destroyEvents() {\n      this.el.removeEventListener('touchstart', this.hide);\n\n      return this;\n    }\n  }\n\n  var container = document.createElement('div');\n\n  container.setAttribute('data-notification-container', '');\n\n  document.body.append(container);\n\n  window.Notification = (text, options) =>{\n    return new NotificationClass(text, options);\n  };\n\n})(window, document);","var __moduleName = $__placeholder__0;","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)"]}